{"version":3,"sources":["Header.js","MemeGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["Header","src","alt","MemeGenerator","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","handleSubmit","fetch","then","response","json","memes","data","console","log","setState","event","target","name","value","this","preventDefault","randNum","Math","floor","random","length","randMemeImg","url","className","onSubmit","type","placeholder","onChange","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAceA,MAZf,WACI,OACI,mCACI,qBACIC,IAAI,iEACJC,IAAI,aAER,mD,0CCwDGC,E,kDA9DX,aAAc,IAAD,8BACT,gBACKC,MAAQ,CACTC,QAAS,GACTC,WAAY,GACZC,UAAY,gCACZC,YAAa,IAEjB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATX,E,qDAWb,WAAoB,IAAD,OACfE,MAAM,qCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACF,IAAOE,EAASF,EAASG,KAAlBD,MACPE,QAAQC,IAAIH,EAAM,IAClB,EAAKI,SAAS,CAACZ,YAAaQ,S,0BAIpC,SAAaK,GACT,MAAsBA,EAAMC,OAArBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACbC,KAAKL,SAAL,eAAiBG,EAAMC,M,0BAE3B,SAAaH,GACTA,EAAMK,iBACN,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWL,KAAKrB,MAAMI,YAAYuB,QAC5DC,EAAcP,KAAKrB,MAAMI,YAAYmB,GAASM,IACpDR,KAAKL,SAAS,CAACb,UAAWyB,M,oBAG9B,WACI,OACI,gCACI,uBAAME,UAAU,YAAYC,SAAUV,KAAKd,aAA3C,UACI,uBACIyB,KAAK,OACLb,KAAK,UACLc,YAAY,WACZb,MAAOC,KAAKrB,MAAMC,QAClBiC,SAAUb,KAAKhB,eAEnB,uBACI2B,KAAK,OACLb,KAAK,aACLc,YAAY,cACZb,MAAOC,KAAKrB,MAAME,WAClBgC,SAAUb,KAAKhB,eAEnB,4CAEJ,sBAAKyB,UAAU,OAAf,UACI,qBAAKjC,IAAKwB,KAAKrB,MAAMG,UAAWL,IAAI,KACpC,oBAAIgC,UAAU,MAAd,SAAqBT,KAAKrB,MAAMC,UAChC,oBAAI6B,UAAU,SAAd,SAAwBT,KAAKrB,MAAME,uB,GAxD3BiC,IAAMC,WCWnBC,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.e1d9e5a3.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction Header(){\n    return (\n        <header>\n            <img \n                src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\"\n                alt=\"Problem?\"\n            />\n            <p>Meme Generator</p>\n        </header>\n    )\n}\n\nexport default Header","import React from \"react\"\n\nclass MemeGenerator extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            topText: \"\",\n            bottomText: \"\",\n            randomImg : \"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs: []\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n    componentDidMount(){\n        fetch(\"https://api.imgflip.com/get_memes\")\n        .then(response => response.json())\n        .then(response => {\n            const {memes} = response.data\n            console.log(memes[0])\n            this.setState({allMemeImgs: memes})\n        })\n    }\n\n    handleChange(event){\n        const {name, value} = event.target\n        this.setState({ [name]:value })\n    }\n    handleSubmit(event){\n        event.preventDefault()\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\n        const randMemeImg = this.state.allMemeImgs[randNum].url\n        this.setState({randomImg: randMemeImg})\n    }\n\n    render(){\n        return (\n            <div>\n                <form className=\"meme-form\" onSubmit={this.handleSubmit} >\n                    <input \n                        type=\"text\"\n                        name=\"topText\"\n                        placeholder=\"Top Text\"\n                        value={this.state.topText}\n                        onChange={this.handleChange}\n                    />\n                    <input \n                        type=\"text\"\n                        name=\"bottomText\"\n                        placeholder=\"Bottom Text\"\n                        value={this.state.bottomText}\n                        onChange={this.handleChange}\n                    />\n                    <button>Gen</button>\n                </form>\n                <div className=\"meme\">\n                    <img src={this.state.randomImg} alt=\"\" />\n                    <h2 className=\"top\">{this.state.topText}</h2>\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MemeGenerator","import './App.css';\nimport Header from \"./Header\"\nimport MemeGenerator from './MemeGenerator';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <MemeGenerator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}